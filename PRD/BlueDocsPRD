
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Web3 Encrypted Markdown Manager - PRD</title>
  <style>
    body { font-family: "Segoe UI", Arial, sans-serif; margin: 32px; line-height: 1.8; background: #fff; color: #212529; }
    h1, h2, h3, h4 { color: #174fa3; }
    code, pre { background: #f6f8fa; padding: 2px 6px; border-radius: 4px; }
    table { border-collapse: collapse; width: 100%; margin: 16px 0; }
    th, td { border: 1px solid #d0d7de; padding: 8px 12px; }
    th { background: #f0f4f8; }
    .layout-box { background: #f6f8fa; border: 1px solid #ccc; padding: 16px; margin: 12px 0; font-family: monospace; }
    ul, ol { margin-left: 24px; }
  </style>
</head>
<body>

<h1>Web3 Encrypted Markdown Manager - Product Requirements Document (PRD)</h1>

<h2>Product Goal</h2>
<p>Build a browser-based encrypted Markdown file manager that supports encrypting content locally, uploading it to IPFS, and storing the encrypted symmetric key on the Optimism blockchain. Users can create, edit, update documents, and view version history.</p>

<hr>

<h2>Core Features</h2>
<table>
  <thead>
    <tr><th>ID</th><th>Feature</th><th>Description</th></tr>
  </thead>
  <tbody>
    <tr><td>F01</td><td>File List</td><td>Display all Markdown files created by the user (latest version only)</td></tr>
    <tr><td>F02</td><td>Markdown Editor</td><td>Used for creating and editing Markdown files</td></tr>
    <tr><td>F03</td><td>File Versioning</td><td>Each update creates a new version; list only shows latest, history accessed via toolbar</td></tr>
    <tr><td>F04</td><td>History Viewer</td><td>In the editor, dropdown or popup shows read-only past versions</td></tr>
  </tbody>
</table>

<hr>

<h2>User Stories</h2>
<ul>
  <li><b>Publisher:</b> As a user, I want to create Markdown files in the browser, encrypt them locally, upload to IPFS, and encrypt the key on-chain so that only specific wallet addresses can decrypt and access the content.</li>
  <li><b>Publisher-Admin:</b> After logging in, I want to see all my published files (latest versions), modify them, and access version history.</li>
  <li><b>Receiver:</b> As a recipient wallet owner, I want to decrypt the encrypted key from chain and access the Markdown file on IPFS.</li>
  <li><b>Observer:</b> I want to view on-chain transactions and IPFS CIDs without being able to access the file content to ensure privacy.</li>
</ul>

<hr>

<h2>Use Cases</h2>

<h3>UC01 - Create and Publish File</h3>
<ol>
  <li>User writes Markdown content.</li>
  <li>Click “Encrypt and Publish”:
    <ul>
      <li>Browser generates AES key → encrypts content locally;</li>
      <li>Encrypted content uploaded to IPFS, receives CID;</li>
      <li>Use <code>eth_getEncryptionPublicKey</code> to fetch public key → encrypt AES key;</li>
      <li>Construct <code>{ cid, encrypted_key }</code> JSON and send it on-chain.</li>
    </ul>
  </li>
</ol>

<h3>UC02 - View File and History</h3>
<ol>
  <li>User logs in with wallet;</li>
  <li>Left pane shows all files (latest versions) for that address;</li>
  <li>Click filename → right pane loads editor;</li>
  <li>Click “View History” → loads all versions sorted by timestamp (read-only preview).</li>
</ol>

<hr>

<h2>UI Layout</h2>
<div class="layout-box">
  <!-- SVG remains unchanged, it's a layout illustration -->
  <!-- You can reuse the SVG as-is without translation -->
</div>

<hr>

<h2>UI/UX Requirements</h2>

<h3>File List (Left Pane)</h3>
<ul>
  <li>Show all files associated with the current wallet address.</li>
  <li>Only latest version shown per file.</li>
  <li>“New File” button is always available and clears the editor when clicked.</li>
</ul>

<h3>Editor Area (Right Pane)</h3>
<ul>
  <li>Markdown editing area with real-time preview support.</li>
  <li>Top input: file name (defaults to first line of Markdown).</li>
  <li>Toolbar:
    <ul>
      <li>“Encrypt and Update File” button.</li>
      <li>“View History” dropdown (descending by timestamp).</li>
    </ul>
  </li>
  <li>History versions are read-only and support copying content or CID.</li>
</ul>

<hr>

<h2>Encryption and Storage Flow</h2>
<ol>
  <li>Use TweetNaCl to generate AES-GCM key.</li>
  <li>Markdown plaintext → AES-encrypted → uploaded to IPFS.</li>
  <li>Use <code>eth_getEncryptionPublicKey</code> to get wallet’s public key.</li>
  <li>Encrypt AES key.</li>
  <li>Construct on-chain data structure (calldata):</li>
</ol>

<hr>

<h2>File Versioning</h2>
<ul>
  <li>Each update creates a new version.</li>
  <li>Left pane file list shows only latest version.</li>
  <li>History accessible via “View History” in toolbar.</li>
  <li>History entries include: CID, transaction hash, timestamp.</li>
</ul>

<hr>

<h2>Suggested Tech Stack</h2>
<ul>
  <li>Frontend Framework: React</li>
  <li>Wallet Interaction: MetaMask + wagmi + viem</li>
  <li>Encryption Tools: TweetNaCl</li>
  <li>Storage: IPFS (via Web3.Storage)</li>
  <li>Blockchain: Optimism Mainnet</li>
  <li>UI Library: Tailwind CSS + shadcn/ui</li>
  <li>Markdown Editor: Toast UI Editor</li>
</ul>

<hr>

<h2>UX Prototype Requirements</h2>
<ul>
  <li>Must implement the following:
    <ul>
      <li>Login / Wallet Connection</li>
      <li>Main interface (left file list + right editor)</li>
      <li>File history dropdown or popup component</li>
    </ul>
  </li>
  <li>Define all button states and behavior (wallet disconnected, uploading, encrypting, success, failure)</li>
  <li>Responsive design support (desktop first; mobile view is read-only)</li>
</ul>

<hr>

<h2>Acceptance Criteria</h2>
<ul>
  <li>User can create and publish encrypted files.</li>
  <li>File list shows only latest version (as part of right-side editor view).</li>
  <li>Clicking “View History” loads previous versions in read-only mode.</li>
  <li>All encryption, IPFS uploads, and on-chain actions occur client-side.</li>
  <li>UI is clean, intuitive, and logically consistent.</li>
</ul>

</body>
</html>